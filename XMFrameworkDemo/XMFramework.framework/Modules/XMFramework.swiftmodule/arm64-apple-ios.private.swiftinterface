// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 6.1.2 effective-5.10 (swiftlang-6.1.2.1.2 clang-1700.0.13.5)
// swift-module-flags: -target arm64-apple-ios18.5 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -Onone -enable-experimental-feature DebugDescriptionMacro -enable-bare-slash-regex -module-name XMFramework
// swift-module-flags-ignorable:  -interface-compiler-version 6.1.2
import Foundation
import Swift
import UIKit
@_exported import XMFramework
import XMFrameworkPrivate
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@_inheritsConvenienceInitializers @objc public class ServiceCenter : ObjectiveC.NSObject {
  @objc public static func register(_ service: Any, for protocolType: ObjectiveC.`Protocol`)
  @objc public static func resolve(_ protocolType: ObjectiveC.`Protocol`) -> Any?
  @objc override dynamic public init()
  @objc deinit
}
@objc public protocol ProfileRouting : ObjectiveC.NSObjectProtocol {
  @objc func pushProfile(from: UIKit.UIViewController, userId: Swift.String)
}
@objc public protocol AnalyticsService : ObjectiveC.NSObjectProtocol {
  @objc func track(event: Swift.String)
}
@objc public protocol UserModule : XMFramework.AnalyticsService, XMFramework.ProfileRouting {
  @objc func test(event: Swift.String)
}
@_inheritsConvenienceInitializers @_hasMissingDesignatedInitializers @objc(XMFrameworkSDK) public class XMFrameworkSDK : ObjectiveC.NSObject {
  @objc public static let shared: XMFramework.XMFrameworkSDK
  @objc deinit
}
@_inheritsConvenienceInitializers @objc public class XMSwiftSDK : ObjectiveC.NSObject {
  @objc override dynamic public init()
  @objc deinit
}
